@using X.PagedList.Mvc;
@using X.PagedList.Mvc.Core
@model X.PagedList.StaticPagedList<App_comunicacao_escolar.Models.Conversa>

@{

}

<h1>@ViewData["TituloDaSecao"]</h1>
<a asp-action="Index" asp-route-secao="@ViewData["TituloDaSecao"]" asp-route-pagina="@ViewData["pagina"]" asp-route-secao="@ViewData["searchString"]" id="refreshConversas" hidden>Refresh</a>

<div class="d-flex justify-content-between my-4">
    <a class="btn btn-primary" asp-action="Create">Nova mensagem</a>
    <div>
        <label for="selecionar-secao">Selecionar seção:</label>
        <select onchange="mudarsecao()" id="selecionar-secao">
            <option>Caixa de entrada</option>
            @if (ViewData["TituloDaSecao"].Equals("Enviados"))
            {
                <option selected="true">Enviados</option>
                <option>Arquivados</option>
            }
            else if (ViewData["TituloDaSecao"].Equals("Arquivados"))
            {
                <option>Enviados</option>
                <option selected="true">Arquivados</option>
            }
            else
            {
                <option>Enviados</option>
                <option>Arquivados</option>
            }
        </select>
    </div>
</div>
@using (Html.BeginForm("Index", "Conversas", new { secao = @ViewData["TituloDaSecao"] }, FormMethod.Post))
{
    <div>
        Buscar conversa por assunto ou conteúdo das mensagens:<br> @Html.TextBox("searchString")
        <input id="Submit1" type="submit" value="Filtrar"/>
    </div>
}
<table class="table">
    <thead>
        <tr>
            <th>
                Remetente
            </th>
            <th>
                Mensagem
            </th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model) {
            ViewData["Mensagem"] = item.PrimeiraMensagem;
            <tr>
                <td>
                    <b>@Html.DisplayFor(modelItem => item.RemetenteNome)</b>
                </td>
                <td>
                    <div class="mensagem-table-space">
                        @if (item.PrimeiraMensagem != null && item.PrimeiraMensagem.Length > 39)
                        {
                            ViewData["Mensagem"] = item.PrimeiraMensagem.Substring(0, 40);
                        }
                        <b>@Html.DisplayFor(modelItem => item.Assunto)</b> - @ViewData["Mensagem"]...
                    </div>
                </td>  
                <td>
                    @* Exibir número de mensagens não lidas da conversa *@
                    @{
                        ViewData["NumeroMensagensNaoLidas"] = 0;
                        var numeroDeNovasMensagensNaConversa = await Task.Run(() => item.NumeroDeNovasMensagensNaConversa.FirstOrDefault(n => n.UsuarioId == ViewBag.IdUsuarioLogado && n.ConversaId == item.Id));
                        if (numeroDeNovasMensagensNaConversa != null)
                        {
                            ViewData["NumeroMensagensNaoLidas"] = numeroDeNovasMensagensNaConversa.NumeroDeMensagensNaoLidas;
                        }

                    }
                    <b>
                        @if (ViewData["NumeroMensagensNaoLidas"].Equals(1))
                        {
                            <text>(1 mensagem nova)</text>
                        }
                        else if (!ViewData["NumeroMensagensNaoLidas"].Equals(0)) {
                            <text>(@ViewData["NumeroMensagensNaoLidas"] mensagens novas)</text>
                        }
                        else {
                            <div class="nao-lido-spacer"></div>
                        }
                    </b>
                    @* ------------------------------------------------ *@
                </td>
                <td>
                    <div class="d-flex">
                        <a class="btn btn-primary" asp-action="Visualizar" asp-route-id="@item.Id">Visualizar</a>
                        @if ((ViewData["TituloDaSecao"].Equals("Arquivados")))
                        {
                            @using (Html.BeginForm("Desarquivar", "Conversas", FormMethod.Post))
                            {
                                <input type="hidden" name="conversaId" value=@item.Id>
                                <button type="submit" class="btn btn-secondary mx-2">Desarquivar</button>
                            }
                        }
                        else {
                            @using (Html.BeginForm("Arquivar", "Conversas", FormMethod.Post))
                            {
                                <input type="hidden" name="conversaId" value=@item.Id>
                                <button type="submit" class="btn btn-secondary mx-2">Arquivar</button>
                            }
                        }
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="row">
    <div class="col-md-8">
        @Html.PagedListPager(Model, pagina => Url.Action("Index", new {pagina, secao = @ViewData["TituloDaSecao"]}), new X.PagedList.Web.Common.PagedListRenderOptions
               {                       
                        DisplayLinkToIndividualPages = true,
                        DisplayPageCountAndCurrentLocation = false,
                        LiElementClasses = new string[] { "page-item" },
                   PageClasses = new string[] { "page-link" },
                   
                    })
    </div>
</div>

        @if (Model.Count() == 0)
        {   
            <div class="col-12 m-2 alert-warning p-3 text-center">Nenhuma conversa encontrada</div>
        }
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/caixademensagens.js" asp-append-version="true"></script>
}

