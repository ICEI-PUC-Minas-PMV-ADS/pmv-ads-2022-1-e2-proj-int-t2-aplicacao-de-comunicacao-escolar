@using System.Globalization
@model App_comunicacao_escolar.Models.Conversa

@{
    ViewData["Title"] = "Mensagem";
    int contarNumeroDeMensagens = 0;

}

<h1> Visualizar conversa</h1>
<h2> @Html.DisplayFor(model => model.Assunto)</h2>
<hr />

@if (@ViewData["Error"] != null){
      // Usada para que o Javascript saiba se o backend retornou error após a submissão do formulário
     <div hidden id="validation-error">@ViewData["Error"]</div>
}

<div>
    @if (Model.Mensagens != null) {
        foreach(Mensagem mensagem in Model.Mensagens)
        {
            <div class="mensagem-email">
            <div class="d-flex justify-content-between mb-1">
                <b>@Html.DisplayFor(modelItem => mensagem.RemetenteNome)</b>
                <span>@mensagem.DataEnvio</span>
            </div>
            <p>Para: @Html.DisplayFor(modelItem => mensagem.ListaDestinatariosNome)</p>
            <div class="border-bottom col-12 m-2"></div>
            <div class="word-wrap-break-anywhere">
            @Html.DisplayFor(modelItem => mensagem.Conteudo)
            </div>
            <!-- Exibir anexos -->
            @if (mensagem.Anexos != null) { 
                @if (mensagem.Anexos.Count > 0){
                    <div class="border-bottom col-12 m-2"></div>
                    <text>Arquivos anexados:</text> <br>
                    <div class="d-flex flex-wrap m-1">
                        @foreach (MensagemArquivosAnexados anexo in mensagem.Anexos)
                        {
                                <span class="caixa-itens-listados">@anexo.NomeOriginalDoArquivo 
                                    <span>&nbsp @Html.ActionLink("Download", "DownloadFile", anexo) &nbsp</span>
                                </span>
                        }
                    </div>
                }
            }
            <!------------------->

            <div class="border-bottom col-12 m-2"></div>

            <input type="hidden" class="remetenteId" name="remetenteId" value=@mensagem.RemetenteId />
            <input type="hidden" class="remetenteNome" name="remetenteNome" value="@mensagem.RemetenteNome" />
            <input type="hidden" class="listaDePessoasPorId" name="listaDePessoasPorId" value=@mensagem.ListaDestinatarios />
            <textarea name="listaDePessoasPorNome" class="listaDePessoasPorNome" hidden> @Html.DisplayFor(modelItem => mensagem.ListaDestinatariosNome) </textarea>
            <input type="hidden" class="mensagemRespondidaId" name="mensagemRespondidaId" value=@mensagem.Id />
            <button type="button" class="btn btn-primary" onclick="abrirTelaDeResponderMensagem(@contarNumeroDeMensagens)">Responder</button>
            <button type="button" class="btn btn-primary" onclick="abrirTelaDeResponderMensagemParaTodosOsParticipantes(@contarNumeroDeMensagens, @mensagem.RemetenteId)">Responder a todos</button>
        
            @{
                 contarNumeroDeMensagens += 1;
            }
        </div>
        }
    }
    <div id="tela-responder-mensagem">
        <form asp-action="CreateResposta" enctype="multipart/form-data">
                <button type="button" class="float-end" onclick="fecharTelaDeResponderMensagem()">X</button>
                <b>Responder mensagem</b>
                <br />
                <label for="pessoaId" class="control-label">Destinatários:</label>
                <select id="pessoaId" asp-for="Participantes" class ="form-control form-select" asp-items="ViewBag.ParticipanteId">
                </select>
                <button type="button" class="btn btn-primary m-1" onclick="adicionarPessoaNaLista()">Adicionar destinatário</button>
                <br />
                <div class="d-flex flex-wrap m-1 input-size-2halfx" id="exibirPessoasSelecionadas"></div>
                <div class="text-danger mb-2" id="listaDePessoasPorIdError">@ViewData["listaDePessoasPorIdError"]</div>
                <span asp-validation-for="Assunto" class="text-danger"></span>
                <textarea onchange, onkeyup="checkError(conteudoMensagem, conteudoMensagemError)" id="conteudoMensagem" name="conteudoMensagem" class="form-control conteudo-textarea" placeholder="Inserir conteúdo da mensagem...">@ViewData["Conteudo"]</textarea>
                <div class="text-danger" id="conteudoMensagemError">@ViewData["conteudoMensagemError"]</div>

                 <label for="arquivos" class="control-label">Anexar arquivos (Tamanho máximo: 25 MB):</label><br />
                 <input onchange="checkError(arquivos, arquivosError)" type="file" class="m-1" id="arquivos" name="arquivos" multiple/>
                 <br />
                 <div class="text-danger" id="arquivosError">@ViewData["arquivosError"]</div>

                <input onkeyup="checkError(listaDePessoasPorId, listaDePessoasPorIdError)" type="text" id="listaDePessoasPorId" name="listaDePessoasPorId" hidden />
                <textarea id="listaDePessoasPorNome" name="listaDePessoasPorNome" class="form-control" hidden>  </textarea>
                <input type="hidden" id="mensagemRespondidaId" name="mensagemRespondidaId" value=@ViewData["mensagemRespondidaId"] />
                <input type="hidden" id="conversaId" name="conversaId" value=@Model.Id />

                <button type="submit" class="btn btn-primary m-1" onclick="postagemRealizada()">Responder</button>
         </form>

    </div>
</div>
<div>
    <div id="fim-da-pagina"></div>
    <a asp-action="Index" asp-route-secao="@ViewData["TituloDaSecao"]">Voltar</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/selecionar-pessoas.js" asp-append-version="true"></script>
    <script src="~/js/visualizar-conversas.js" asp-append-version="true"></script>
}
