@using X.PagedList.Mvc;
@using X.PagedList.Mvc.Core
@model X.PagedList.StaticPagedList<App_comunicacao_escolar.Models.Notificacao>
@{
    ViewData["Title"] = "Index";
}

<h1>Notificações</h1>

<div class="d-flex justify-content-between my-4">
    @if(User.IsInRole("Admin")) {
        <div class="d-flex justify-content-between my-4 whitespace-nowrap">
        <a asp-action="Create" class="btn btn-primary">Nova notificação</a>
        </div>
    }
    else
    {
        <div></div>
        <div>
            <label for="selecionar-secao">Selecionar seção:</label>
            <select onchange="mudarsecao()" id="selecionar-secao" class="input-size-3quarters">
                <option>Em aberto</option>
                @if (ViewData["TituloDaSecao"] != null) {
                    if (ViewData["TituloDaSecao"]!.Equals("Visualizadas"))
                    {
                        <option selected="true">Visualizadas</option>
                    }
                    else
                    {
                        <option>Visualizadas</option>
                    }
                }
            </select>
        </div>
    }
</div>

@using (Html.BeginForm("Index", "Notificacoes", new { secao = @ViewData["TituloDaSecao"] }, FormMethod.Post))
{
    <div>
        Buscar notificação por assunto:<br> @Html.TextBox("searchString")
        <input id="Submit1" type="submit" value="Buscar"/>
    </div>
}
<table class="table">
    <thead>
        <tr>
            <th>
                Notificação
            </th>
            @if (User.IsInRole("Admin"))
            {
                <th>
                    Turma
                </th>
                <th>
                    Tipo de usuário
                </th>
            }
            <th>
                Lançada em
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td class="word-wrap-break-anywhere">
                <b>@Html.DisplayFor(modelItem => item.Assunto)</b>
                <br>
                @Html.DisplayFor(modelItem => item.Conteudo)
            </td>
            @if (User.IsInRole("Admin"))
            {
                <td>
                    @if(item.Turma == null) 
                    {
                        <text>Todas</text>
                    }
                    else {
                        @Html.DisplayFor(modelItem => item.Turma.Codigo)
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Perfil)
                </td>
            }
            <td>
                @{
                    string dataCriacao = item.DataCriacao!.ToString()!;
                    dataCriacao = dataCriacao.Substring(0, 8);
                }
                @dataCriacao
            </td>
            <td>
                @if (User.IsInRole("Admin")) {
                    <a asp-action="Delete" asp-route-id="@item.Id">Apagar</a>
                }
                else if (!ViewData["TituloDaSecao"]!.Equals("Visualizadas"))
                {
                    @using (Html.BeginForm("MarcarComoVista", "Notificacoes", FormMethod.Post))
                            {
                                <input type="hidden" name="notificacaoId" value=@item.Id>
                                <button type="submit" class="btn btn-primary mx-1">Marcar como vista</button>
                            }
                }
             </td>
        </tr>
}
    </tbody>
</table>
@if (Model.Count() == 0)
{   
    <div class="col-12 m-2 alert-warning p-3 text-center">Nenhuma notificação encontrada</div>
}


<div class="row">
    <div class="col-md-8">
        @Html.PagedListPager(Model, pagina => Url.Action("Index", new {pagina, secao = @ViewData["TituloDaSecao"]}), new X.PagedList.Web.Common.PagedListRenderOptions
               {                       
                        DisplayLinkToIndividualPages = true,
                        DisplayPageCountAndCurrentLocation = false,
                        LiElementClasses = new string[] { "page-item" },
                   PageClasses = new string[] { "page-link" },
                   
                    })
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/notificacoes.js" asp-append-version="true"></script>
}